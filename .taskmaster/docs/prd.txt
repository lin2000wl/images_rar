<context>
# Overview  
图片压缩工具是一个桌面应用程序，旨在帮助用户批量压缩指定文件夹下所有子文件夹中的大尺寸图片。该工具能够自动识别大于100KB的图片文件，并将其压缩到100KB以内，同时保持图片质量的可接受范围。用户可以选择替换原始图片或创建新的压缩版本，为用户提供灵活的文件管理选项。

# Core Features  
## 1. 文件夹选择功能
- 提供图形化界面让用户选择目标文件夹
- 支持浏览文件夹树状结构
- 显示选中文件夹路径确认

## 2. 图片自动扫描与筛选
- 递归扫描选定文件夹及其所有子文件夹
- 自动识别常见图片格式（JPG、PNG、GIF、BMP、WEBP等）
- 筛选出文件大小大于100KB的图片
- 显示扫描结果统计信息

## 3. 智能图片压缩
- 自动调整图片质量和尺寸以达到100KB以内
- 保持图片宽高比例
- 支持多种压缩算法优化
- 实时显示压缩进度

## 4. 灵活的输出选项
- 用户可选择替换原始图片
- 用户可选择创建新的压缩图片文件
- 支持自定义新文件命名规则
- 提供压缩前后对比信息

# User Experience  
## 用户画像
- 主要用户：需要批量处理图片的个人用户、网站管理员、内容创作者
- 技术水平：一般计算机用户，不需要专业技术知识
- 使用场景：网站图片优化、存储空间节省、图片分享准备

## 关键用户流程
1. 启动应用程序
2. 点击"选择文件夹"按钮，浏览并选择目标文件夹
3. 程序自动扫描并显示需要压缩的图片列表
4. 用户选择输出方式（替换原图或创建新图）
5. 点击"开始压缩"按钮
6. 查看压缩进度和结果统计
7. 完成后查看压缩报告

## UI/UX 考虑
- 简洁直观的界面设计
- 清晰的进度指示器
- 详细的操作反馈信息
- 错误处理和用户提示
</context>
<PRD>
# Technical Architecture  
## 系统组件
- 图形用户界面（GUI）：使用 Python Tkinter 或 PyQt
- 图片处理引擎：使用 Pillow (PIL) 库
- 文件系统操作：使用 Python os 和 pathlib 模块
- 配置管理：JSON 配置文件存储用户偏好

## 数据模型
- ImageFile 类：存储图片文件信息（路径、大小、格式等）
- CompressionTask 类：管理压缩任务状态和参数
- Settings 类：管理用户配置和偏好设置

## 核心算法
- 图片质量自适应压缩算法
- 文件大小预测和调整机制
- 批量处理队列管理

## 基础设施要求
- Python 3.8+ 运行环境
- 支持 Windows、macOS、Linux 跨平台
- 最小内存要求：512MB
- 磁盘空间：根据处理图片数量动态调整

# Development Roadmap  
## Phase 1: MVP 核心功能
- 基础 GUI 界面框架
- 文件夹选择对话框
- 基本图片扫描功能
- 简单图片压缩算法
- 替换原图功能

## Phase 2: 增强用户体验
- 进度条和状态显示
- 压缩结果统计
- 创建新图片选项
- 错误处理和用户提示
- 基础配置保存

## Phase 3: 高级功能优化
- 智能压缩算法优化
- 批量操作性能提升
- 详细的压缩报告
- 用户偏好设置界面
- 撤销/恢复功能

# Logical Dependency Chain
## 基础层（必须首先完成）
1. 项目结构搭建和依赖管理
2. 基础 GUI 框架创建
3. 文件系统操作模块

## 核心功能层
4. 文件夹选择功能实现
5. 图片文件扫描和筛选
6. 基础图片压缩功能
7. 文件操作（替换/创建新文件）

## 用户体验层
8. 进度显示和状态反馈
9. 错误处理和异常管理
10. 用户配置和偏好设置

## 优化层
11. 性能优化和算法改进
12. 用户界面美化和交互优化
13. 测试和调试完善

# Risks and Mitigations  
## 技术挑战
- **风险**：大文件批量处理可能导致内存溢出
- **缓解**：实现分批处理和内存管理机制

- **风险**：不同图片格式的压缩效果差异
- **缓解**：针对不同格式优化压缩参数

## MVP 定义
- **风险**：功能范围过大导致开发周期延长
- **缓解**：专注于核心功能，后续迭代添加高级特性

## 资源约束
- **风险**：跨平台兼容性问题
- **缓解**：优先支持 Windows 平台，后续扩展其他平台

# Appendix  
## 技术规范
- 编程语言：Python 3.8+
- GUI 框架：Tkinter（内置）或 PyQt5/6
- 图片处理：Pillow (PIL)
- 打包工具：PyInstaller

## 支持的图片格式
- JPEG (.jpg, .jpeg)
- PNG (.png)
- GIF (.gif)
- BMP (.bmp)
- WEBP (.webp)

## 性能目标
- 单张图片压缩时间：< 2秒
- 支持同时处理图片数量：1000+ 张
- 内存使用峰值：< 1GB
</PRD> 